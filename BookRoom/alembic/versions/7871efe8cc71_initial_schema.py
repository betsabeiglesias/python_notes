"""Initial schema

Revision ID: 7871efe8cc71
Revises: 
Create Date: 2025-06-10 14:38:16.194591

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7871efe8cc71'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('reservations')
    op.drop_table('seats')
    op.drop_table('spaces')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spaces',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('spaces_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('study', 'lecture', 'meeting', name='spacetype'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='spaces_pkey'),
    sa.UniqueConstraint('name', 'location', name='uq_name_location'),
    postgresql_ignore_search_path=False
    )
    op.create_table('seats',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('seats_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('space_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], name='seats_space_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='seats_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('reservations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('seat_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], name=op.f('reservations_seat_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('reservations_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('reservations_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('nickname', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('credit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rol', postgresql.ENUM('user', 'admin', name='roleenum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('nickname', name=op.f('users_nickname_key'))
    )
    # ### end Alembic commands ###
